/*
 * Copyright 2015-2025. Ritense BV, the Netherlands.
 *
 *  Licensed under EUPL, Version 1.2 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" basis,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

def sonatypeCentralStagingDir = "sonatypeCentralStaging"
def signingConfigSet = false
if(System.getenv('SIGNING_KEY') &&
    System.getenv('SIGNING_KEY_PASSWORD')
) {
    signingConfigSet = true
}

if(signingConfigSet) {
    apply plugin: 'signing'
}

if(System.getenv('SONATYPE_USR') &&
        System.getenv('SONATYPE_PSW')
) {
    apply plugin: 'maven-publish'
    apply plugin: 'org.jreleaser'
}

publishing {
    repositories {
        maven {
            name "Sonatype"
            url = sonatypeCentralStagingDir
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = projectGroup
            artifactId = projectName
            version = projectVersion


            pom {
                name = 'Temporary data container'
                description = 'The Temporary data container enables to exchange data between processes during a running case within the Generiek Zaakafhandelcomponent (GZAC) ecosystem'
                developers {
                    developer {
                        id = "haiko-ritense"
                        name = "Haiko van der Schaaf"
                        email = "haiko.van.der.schaaf@ritense.com"
                    }
                }

                url = 'https://github.com/generiekzaakafhandelcomponent/temporary-data'
                licenses {
                    license {
                        name = 'Licensed under EUPL, Version 1.2 (the "License");'
                        url = 'https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12'
                    }
                }
                scm {
                    connection = "git@github.com:generiekzaakafhandelcomponent/temporary-data.git"
                    developerConnection = "git@github.com:generiekzaakafhandelcomponent/temporary-data.git"
                    url = "https://github.com/generiekzaakafhandelcomponent/temporary-data"
                }
            }
            from components.java
        }
    }
}

jreleaser {
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'RELEASE'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    applyMavenCentralRules = false
                    snapshotSupported = false
                    sign = false
                    username = System.getenv('SONATYPE_USR')
                    password = System.getenv('SONATYPE_PSW')
                    retryDelay = 60
                }
            }
            nexus2 {
                sonatypeSnapshots {
                    active = 'SNAPSHOT'
                    snapshotUrl = 'https://central.sonatype.com/repository/maven-snapshots/'
                    snapshotSupported = true
                    username = System.getenv('SONATYPE_USR')
                    password = System.getenv('SONATYPE_PSW')
                }
            }
        }
    }
}

if(signingConfigSet) {
    signing {
        def signingKeyBase64 = System.getenv("SIGNING_KEY")
        def signingKeyBytes= signingKeyBase64.decodeBase64()
        def signingKey = new String(signingKeyBytes, "UTF-8")
        def signingKeyPassword = System.getenv('SIGNING_KEY_PASSWORD')

        useInMemoryPgpKeys(signingKey, signingKeyPassword)
        sign configurations.archives
        sign publishing.publications.maven
    }
}

